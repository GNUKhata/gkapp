# SAST customization: https://docs.gitlab.com/ee/user/application_security/sast/#customizing-the-sast-settings
# Secret Detection customization: https://docs.gitlab.com/ee/user/application_security/secret_detection/#customizing-settings
# Dependency Scanning customization: https://docs.gitlab.com/ee/user/application_security/dependency_scanning/#customizing-the-dependency-scanning-settings
# Note that environment variables can be set in several places
# See https://docs.gitlab.com/ee/ci/variables/#cicd-variable-precedence

stages:
  - build
  - deploy
  - test

variables:
  DOCKER_TLS_CERTDIR: '/certs'
  # DOCKER_HOST: tcp://docker:2375

# build gkapp
gkapp:
  stage: build
  image: node:gallium-alpine
  variables:
    # required to serve gkapp on gitlab pages
    GKAPP_URL: https://gnukhata.gitlab.io/gkapp
    VUE_APP_GKAPP_VERSION: $CI_COMMIT_SHORT_SHA
  script:
    # Replace default gkapp config with custom one
    - mv public/gkapp-config.json public/gkapp-config.json.bak
    - wget https://gitlab.com/gnukhata/build/-/raw/master/gkapp-config.json
    - mv gkapp-config.json public/
    # install dependencies & build
    - npm install -g @vue/cli
    - npm install
    # run lint on project files
    - npm run lint src/
    # then build, dist/ has the artifact
    - npm run build
  artifacts:
    paths:
      - dist

services:
  - docker:20.10.19-dind

# build gkapp docker image from devel commits & upload it to docker hub
docker-devel:
  image: docker:20.10.19
  stage: build
  script:
    # build the docker image & push to the dockerhub
    - docker login -u digitalfreedom -p $DOCKERHUB_PWD
    - docker build -t digitalfreedom/gkapp:devel --build-arg VERSION=$CI_COMMIT_SHORT_SHA .
    - docker push digitalfreedom/gkapp:devel
  only:
    - devel

# build gkapp docker image on a release & push it to the docker hub
docker-prod:
  image: docker:20.10.19
  stage: build
  script:
    # build the docker image & push to the dockerhub
    - docker login -u digitalfreedom -p $DOCKERHUB_PWD
    - docker build -t digitalfreedom/gkapp:$CI_COMMIT_TAG --build-arg VERSION=$CI_COMMIT_TAG .
    - docker push digitalfreedom/gkapp:$CI_COMMIT_TAG
    # create alias for the latest tag
    - docker tag digitalfreedom/gkapp:$CI_COMMIT_TAG digitalfreedom/gkapp:latest
    - docker push digitalfreedom/gkapp:latest
  only:
    - tags

# SAST Tests
sast:
  stage: test
  variables:
    SAST_EXCLUDED_PATHS: spec, test, tests, tmp, dist, package-lock.json
include:
  - template: Security/SAST.gitlab-ci.yml
  - template: Security/Dependency-Scanning.gitlab-ci.yml
  - template: Security/Secret-Detection.gitlab-ci.yml

# runs the ui tests against the dev server
# TODO: re enable this job when the QA team adds the plan
# ui_tests:
#   image: kskarthik/nexial-core:latest
#   stage: test
#   # this job runs with a delay to make sure the dev server
#   # is updated to latest commit
#   when: delayed
#   start_in: 3 minutes
#   script: |
#     cd tests/artifact
#     nexial.sh -plan plan/GNUKhata-plan.xlsx

# gzip the files & deploy to gitlab pages
pages:
  stage: deploy
  needs:
    - job: gkapp
      artifacts: true
  script:
    - mv public _pub
    - mv dist public
    - gzip -k -9 $(find public -type f)
  artifacts:
    paths:
      - public
  only:
    - devel
